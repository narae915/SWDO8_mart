<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.market.dao.AdminMapper">

	<!-- 직원인지 확인 -->
	<select id="StaffOnlyChk" parameterType="String" resultType="String">
		select 
			emp_num as empNum
		from
			emp_table
		where
			emp_num || emp_name = #{chkMessage }
	</select>

	<!-- 페이징 -->
	<select id = "getTotalRecordsCount" resultType = "int" parameterType = "HashMap">
 		select
 			count(*)
 		from
 			item_table
 		<where>
 			<if test = "searchWord != ''">
 				item_num in (select item_Num
			 					from item_table
			 					where item_name like '%'||#{searchWord }||'%')
 			</if>
 			<if test = "category != 0">
 			and
 				category_num = #{category }
 			</if>
 		</where>
 	</select>
 	
 	<!-- 상품목록 불러오기 -->
 	<select id = "getItemList" resultType = "Item" parameterType = "HashMap">
 		select
 			it.item_num as itemNum,
 			it.item_name as itemName,
 			it.price as price,
 			it.item_amount as itemAmount,
 			(select ct.category_name
 				from category_table ct
 				where ct.category_num = it.category_num) as categoryName
 		from
 			item_table it,
 			(select rownum as rn, item_num as ln
 			from item_table
 			 <where>
 			<if test = "searchWord != ''">
			item_num in (select item_num
		        			from item_table
							where item_name like '%'||#{searchWord }||'%')
			</if>
 			<if test = "category != 0">
 			and
				category_num = #{category }
			</if>
			</where>
 				order by item_num) rt
 		where
 			it.item_num = rt.ln
		and
		<if test = "searchWord != ''">
			it.item_num in (select item_num
		        			from item_table
							where item_name like '%'||#{searchWord }||'%')
			and
		</if>
 		<if test = "category != 0">
			category_num = #{category }
			and
		</if>
			rt.rn between #{startRecord } + 1 and #{startRecord } + #{countPerPage }
 		order by item_num
 	</select>
 	
 	<!-- 상품 사진 가져오기 -->
	<select id="getFileList" resultType="File" parameterType="Integer">
		 select saved_filename as savedFilename,
		 		item_num as itemNum
                from file_list fl
                where fl.file_num= 
	                <foreach collection='list' item='itemNum' separator="or fl.file_num =">
	                (select min(fl.file_num)
	                                    from file_list fl
	                                    group by fl.item_num
	                                    having fl.item_num= #{itemNum })
					</foreach>
	</select>
 	
 	<!-- 상품 삭제 -->
 	<delete id = "itemDelete" parameterType = "List">
 		delete from item_table
 		where item_num = 
 		<foreach collection='list' index="index" item='item' separator="or item_num =" open=" " close=" ">
		#{item }
		</foreach>
 	</delete>
 	
 	<!-- 상품 등록 -->
 	<insert id = "itemInsert" parameterType = "HashMap">
 		insert into item_table(
			item_num,
			category_num,
			item_name,
			price,
			item_amount,
			introduce 		
 		)
 		values (
 			item_num_seq.nextval,
 			#{category },
 			#{itemName },
 			#{intPrice },
 			#{itemAmount },
 			#{introduce }
 		)
 	</insert>

 	<!-- 직원 ID 등록 -->
	<insert id="adminRegister" parameterType="Emp">
		insert into emp_table
		values
		(
			emp_num_seq.nextval,
			#{empPw },
			#{empName },
			#{empCall },
			#{empMail },
			#{position }
		)
	</insert>
	
 	<!-- 직원 ID 등록 시 사진 등록 -->
	<insert id="empSetFile" parameterType="File">
		insert into file_list 
		(
			<if test = "savedFilename != null">
				file_num, 
				original_filename,
				saved_filename
			</if>
		)
    	values
    	(
    		<if test = "savedFilename != null">
		        file_num_seq.nextval,
		        #{originalFilename },
		        #{savedFilename }
	        </if>
		)
	</insert>
	
	<!-- 로그인 -->
	<select id="selectEmpNm" parameterType="Emp" resultType="String">
		select
			emp_name as empName
		from
			emp_table
		where
			emp_num = #{empNum }
			and
			emp_pw = #{empPw }
	</select>
	
	<!-- 로그인 정보 가져오기 -->
	<select id="getEmpInfoList" parameterType="HashMap" resultType="Emp">
		select
			emp_name as empName,
			position
		from
			emp_table
		where
			emp_num = #{empNum }
			and
			emp_pw = #{empPw }
	</select>
	
	<!-- 직원 리스트 조회 -->
	<select id="getEmpList" parameterType="HashMap" resultType="Emp">
		select
			et.emp_num as empNum,
		    et.emp_name as empName,
		    et.position as position,
		    et.emp_call as empCall,
		    (select distinct fl.saved_filename
 				from file_list fl
 				where instr(fl.saved_filename, (et.emp_name||et.emp_call)) > 0) as savedFilename,
		    <choose>
		    	<when test="loginPosition == '사장'">
		    	 	et.emp_mail as empMail
		    	</when>
		    	<otherwise>
					rpad(
						substr(substr(et.emp_mail, 1, instr(et.emp_mail, '@') - 1), 1, 2), 
						lengthb(substr(et.emp_mail, 1, instr(et.emp_mail, '@') - 1)), '*')
					|| '@' ||
					rpad(
						substr(substr(et.emp_mail, instr(et.emp_mail, '@') + 1), 1, 1), 
						lengthb(substr(et.emp_mail, instr(et.emp_mail, '@') + 1)), '*') as empMail
		    	</otherwise>
		    </choose>
		from
		   emp_table et,
		   (select
		        rownum as rn,
		        emp_num as en
		    from
		        emp_table
		    <where>
		    	<if test = "searchWord != '' || searchWord != null">
			    	<if test="searchType == 'searchEmpName'">
						emp_name like '%' || #{searchWord } || '%'
					</if>
					<if test="searchType == 'searchEmpNum'">
						emp_num like '%' || #{searchWord } || '%'
					</if>
					<if test="searchType == 'searchPosition'">
						position like '%' || #{searchWord } || '%'
					</if>
				</if>
			</where>	
		    order by
		        emp_num desc) rt
		<where>
			<if test = "searchWord != '' || searchWord != null">
				et.emp_num = rt.en
				and
			    rt.rn between #{startRecord } + 1 and #{startRecord } + #{countPerPage }
		    </if>
			<if test="searchType == 'searchEmpName'">
				and
				et.emp_name like '%' || #{searchWord } || '%'
			</if>
			<if test="searchType == 'searchEmpNum'">
				and
				et.emp_num like '%' || #{searchWord } || '%'
			</if>
			<if test="searchType == 'searchPosition'">
				and
				et.position like '%' || #{searchWord } || '%'
			</if>
		</where>
		order by emp_num desc
	</select>
	
	<!-- 총 직원 수 조회  (페이징) -->
	<select id="getEmpTotalRecordsCount" parameterType="HashMap" resultType="int">
		select
			count(*)
		from
			emp_table
		<where>
			<if test="searchType == 'searchEmpName'">
				emp_name like '%' || #{searchWord } || '%'
			</if>
			<if test="searchType == 'searchEmpNum'">
				emp_num like '%' || #{searchWord } || '%'
			</if>
			<if test="searchType == 'searchPosition'">
				position like '%' || #{searchWord } || '%'
			</if>			
		</where>
	</select>
	
	<!-- 직원 번호로 해당 직원 정보 조회 -->
	<select id="readEmp" parameterType="int" resultType="Emp">
		select
			et.emp_num as empNum,
			et.emp_name as empName,
			et.emp_call as empCall,
			et.emp_mail as empMail,
			et.position as position,
			(select distinct fl.saved_filename
 				from file_list fl
 				where instr(fl.saved_filename, (et.emp_name||et.emp_call)) > 0) as savedFilename
		from
			emp_table et
		where 
			emp_num = #{empNum }
	</select>
	
	<!-- 파일번호 가져오기 -->
	<select id="getFileNum" parameterType="File" resultType="String">
		select
			file_num as fileNum
		from
			file_list
		where
			saved_filename = #{savedFilename }
	</select>
	
	<!-- 직원 정보 수정 -->
	<update id="empUpdate" parameterType="Emp">
		update 
			emp_table
		set
			emp_pw = #{empPw },
			emp_name = #{empName },
			emp_call = #{empCall },
			emp_mail = #{empMail },
			position = #{position }
		where
			emp_num = #{empNum }
	</update>
	
	<!-- 직원 사진 정보 삭제 -->
	<delete id="empDeleteFile" parameterType="String">
		delete from file_list
		where
			saved_filename = #{empImg }
	</delete>
	
	<!-- 직원 사진 정보 수정 -->
	<!-- <update id="empUpdateFile" parameterType="File">
		update 
			file_list
		set
			original_filename = #{originalFilename },
			saved_filename = #{savedFilename }
		where
			saved_filename = #{empImg }
	</update> -->
	
	<!-- 직원 정보 삭제 -->
	<delete id="empDelete" parameterType="int">
		delete from emp_table
		where
			emp_num = #{empNum }
	</delete>
	
	<!-- ID 찾기 -->
	<select id="selectEmpId" parameterType="Emp" resultType="int">
		select
			emp_num as empNum
		from
			emp_table
		where
			emp_name = #{empName }
			and
			emp_mail = #{empMail }
	</select>
	
	<!-- PW 찾기 전 해당하는 직원 찾기 -->
	<select id="findEmp" parameterType="Emp" resultType="int">
		select
			count(*)
		from
			emp_table
		where
			emp_num = #{empNum }
			and
			emp_mail = #{empMail }
	</select>
	
	<!-- PW 리셋 -->
	<update id="updatePw" parameterType="Emp">
		update 
			emp_table
		set
			emp_pw = #{empPw }
		where
			emp_mail = #{empMail }
	</update>
	
	<!-- 상품 수정 페이지 기존 정보 불러오기 -->
	<select id="getAdminItemList" parameterType="String" resultType="Item">
		select
			item_num as itemNum,
			item_name as itemName,
			category_num as categoryNum,
			(select category_name
				from category_table
				where category_num = (select category_num
										from item_table
										where item_num = #{itemChk })) as categoryName,
			price as price,
			item_amount as itemAmount,
			(select saved_filename
				from file_list
				where file_num = (select min(file_num)
									from file_list
									group by item_num
									having item_num = #{itemChk })) as savedFilename,
			introduce as introduce
		from
			item_table
		where 
			item_num = #{itemChk }
	</select>
	
	<!-- 상품 수정 - 정보 -->
	<update id="itemUpdate" parameterType="HashMap">
		update
			item_table it
		set
			item_name = #{itemName },
			price = #{price },
			item_amount = #{itemAmount },
			category_num = #{category },
			introduce = #{introduce }
		where
			item_num = #{itemNum }
	</update>
	
	<!-- 상품 수정 - 파일 -->
	<update id="itemFileUpdate" parameterType="HashMap">
		update
			file_list
		set
			original_filename = #{originalFilename },
			saved_filename = #{savedFilename }
		where
			saved_filename = #{basicFile }
	</update>
	
	<!-- 회원 검색 -->
	<select id="searchUser" parameterType="HashMap" resultType="User">
		select
			rt.rn as serialNumber,
			ut.user_num as userNum,
			ut.user_name as userName,
			ut.user_call as userCall,
			ut.user_mail as userMail,
			ut.postcode as postcode,
			ut.user_address as userAddress
		from
			user_table ut,
			(select
		        rownum as rn,
		        user_num as un
		    from
		        user_table
		    order by
		        user_num desc) rt
		where
			ut.user_num = rt.un
			and
		    rt.rn between #{startRecord } + 1 and #{startRecord } + #{countPerPage }
			<if test="searchType == 'searchName'">
				and
				ut.user_name like '%'||#{searchWord }||'%'
			</if>
			<if test="searchType == 'searchTelNum'">
				and
				ut.user_call like '%'||#{searchWord }||'%'
			</if>
			<if test="searchType == 'searchMail'">
				and
				ut.user_mail like '%'||#{searchWord }||'%'
			</if>
	</select>
	
	<!-- 총 유저수 확인 -->
	<select id="getUserTotalRecordsCount" parameterType="HashMap" resultType="int">
		select
			count(*)
		from
			user_table
		<where>
			<if test="searchType == 'searchName'">
				user_name like '%'||#{searchWord }||'%'
			</if>
			<if test="searchType == 'searchTelNum'">
				user_call like '%'||#{searchWord }||'%'
			</if>
			<if test="searchType == 'searchMail'">
				user_mail like '%'||#{searchWord }||'%'
			</if>
		</where>	
	</select>
	
	<!-- 상품 판매글-보관법 작성 -->
	<update id="itemInventoryWrite" parameterType="HashMap">
		update
			item_table
		set
			inventory= #{editordata }
		where
			item_num = #{itemNum }
	</update>
	
	<!-- 상품 판매글-상품정보 작성 -->
	<update id="itemInforWrite" parameterType="HashMap">
		update
			item_table
		set
			infor= #{editordata }
		where
			item_num = #{itemNum }
	</update>
	
	<!-- 상품 판매글-손질법 작성 -->
	<update id="itemCookWrite" parameterType="HashMap">
		update
			item_table
		set
			cook= #{editordata }
		where
			item_num = #{itemNum }
	</update>
	
	<!-- 상품 판매글-사진 업로드 -->
	<insert id = "itemImgSave" parameterType="File">
		insert into file_list (
			file_num,
			original_filename,
			saved_filename,
			item_num
		) values (
			file_num_seq.nextval,
			#{originalFilename },
			#{savedFilename },
			#{itemNum }
		)
	</insert>
	
	<!-- 상품 사진 불러오기 -->
	<select id = "getItemFileList" parameterType="String" resultType="String">
		select saved_filename as savedFilename
		from file_list
		where item_num = #{itemNum }
	</select>
	
	<!-- 상품 정보 중, 기존 사진 삭제 -->
	<delete id="itemImgDelete" parameterType="String">
		delete from file_list
		where saved_filename = #{fileName }
	</delete>
	
	<!-- 상품 추가 시 사진 추가 -->
	<insert id="itemFileInsert" parameterType="HashMap">
		insert into file_list (
			file_num,
			item_num,
			original_filename,
			saved_filename
		) values (
			file_num_seq.nextval,
			(select max(item_num)
	 			from item_table),
			#{originalFilename },
			#{savedFilename }
		)
	</insert>
	
	<!-- 강제 회원 탈퇴 -->
	<delete id="deleteUser" parameterType="int">
		delete from user_table
		where
			user_num = #{userNum }
	</delete>
</mapper>