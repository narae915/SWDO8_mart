<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.market.dao.OrderMapper">
	
	<!-- 주문 리스트 페이징 -->
	<select id = "getTotalRecordsCount" parameterType="HashMap" resultType = "int">
 		select
 			count(*)
 		from
 			order_table ot
 		where		   
				user_num = (select distinct user_num
							from user_table
							where user_mail= #{userMail })
 			<if test = "searchWord != ''">
 			and
 				ot.item_num in (select item_Num
		 					from item_table
		 					where item_name like '%'||#{searchWord }||'%')
 			</if>
 	</select>

	<!-- 주문목록 불러오기 -->
	<select id="getOrderList" resultType="Order" parameterType="HashMap">
		select 
		    ot.order_num as orderNum,
			(select item_name
        		from item_table
				where item_num = ot.item_num) as itemName,
		    ot.order_address as orderAddress,
		    ot.order_mail as orderMail,
		    ot.order_call as orderCall,
		    ot.amount as amount,
		    to_char(ot.indate, 'yy/mm/dd hh24:mi:ss') as indate,
            (select price
                from item_table 
                where item_num = ot.item_num) as price
		from   
		    order_table ot,
		    (select
		    	rownum as rn,
		    	order_num as ln
		    from
		    	order_table
			where		   
				user_num = (select distinct user_num
							from user_table
							where user_mail= #{userMail })
			<if test = "searchWord != ''">
			and
				item_num in (select item_num
			        			from item_table
								where item_name like '%'||#{searchWord }||'%')
			</if>
		    order by
		    	order_num) rt
		where
		<if test = "searchWord != ''">
			ot.item_num in (select item_num
			        			from item_table
								where item_name like '%'||#{searchWord }||'%')
			and
		</if>
			ot.order_num = rt.ln
		and
			rt.rn between #{startRecord } + 1 and #{startRecord } + #{countPerPage }
		order by order_num
	</select>
	
	<!-- 주문 취소 -->
	<delete id="orderCancel" parameterType="List">
		delete from order_table
		where order_num = 
		<foreach collection='list' index="index" item='item' separator="or order_num =" open=" " close=" ">
		#{item }
		</foreach>
	</delete>
	
	<!-- 장바구니 페이징 -->
	<select id = "getCartTotalRecordsCount" resultType = "int" parameterType = "String">
 		select
 			count(*)
 		from
 			cart_table
 		where		   
			user_num = (select distinct user_num
						from user_table
						where user_mail = #{userMail })
 	</select>
	
	<!-- 장바구니 불러오기 -->
	<select id="getCartList" resultType="Cart" parameterType="HashMap">
		select 
		    ct.cart_num as cartNum,
		    item_num as itemNum,
			(select item_name
        		from item_table
				where item_num = ct.item_num) as itemName,
		    cart_amount as cartAmount,
            (select price
                from item_table 
                where item_num = ct.item_num) as price
		from   
		    cart_table ct,
		    (select rownum as rn, cart_num as ln
		    from cart_table
			where user_num = (select distinct user_num
								from user_table
								where user_mail = #{userMail })
		    order by cart_num) rt
		where
			ct.cart_num = rt.ln
		
		and
			rt.rn between #{startRecord } + 1 and #{startRecord } + #{countPerPage }
		order by cart_num
	</select>
	
	<!-- 장바구니 삭제 -->
	<delete id="cartCancel" parameterType="int">
		delete from cart_table
		where cart_num = #{cartNum }
	</delete>
	
	<!-- 장바구니에 상품넣기 -->
	<insert id="insertCart" parameterType="HashMap">
		insert into cart_table(
			cart_num,
			user_num,
			item_num,
			cart_amount
		) values (
			cart_num_seq.nextval,
			#{userNum },
			#{itemNum },
			#{cartAmount }
		)
	</insert>
	
	<!-- 장바구니에 같은 상품이 있는지 확인 -->
	<select id="checkCart" parameterType="HashMap" resultType="Cart">
		select
			cart_num as cartNum,
			item_num as itemNum
		from
			cart_table
		where
			item_num = #{itemNum }
			and
			user_num = #{userNum }
	</select>
	
	<!-- 장바구니에 같은 상품이 있다면 수량을 증가 -->
	<update id="updateCartAmount" parameterType="HashMap">
		update 
			cart_table
		set
			cart_amount = cart_amount + #{cartAmount }
		where
			item_num = #{itemNum }
			and
			user_num = #{userNum }
	</update>
	
	<!-- 장바구니 조회 서브쿼리로 userMail을 불러옴, cart와 item테이블 조인으로 로그인한 사람의 장바구니 내역을 조회 -->
	<select id="selectCartList" resultType="Item" parameterType="String">
		select
			c.cart_num as cartNum,
			i.item_num as itemNum,
			i.item_name as itemName,
			i.price as price,
			c.cart_amount as cartAmount
		from
			(select cart.cart_num as cart_num,
					cart.item_num as item_num,
					u.user_mail as user_mail,
					cart.cart_amount as cart_amount
				from 
					cart_table cart, user_table u
				where 
					cart.user_num = u.user_num) c, item_table i
		where
			c.item_num = i.item_num
			and
			c.user_mail = #{userMail }
	</select>
	
	<!-- 결제 정보 입력 페이지 회원정보 불러오기 -->
	<select id="getUserList" resultType="User" parameterType="String">
		select
			user_name as userName,
			user_call as userCall,
			user_address as userAddress
		from user_table
		where 
			user_mail = #{userMail }
	</select>
	
	<!-- 결제 정보 입력 페이지 상품정보 불러오기 -->
	<select id="getItemList" resultType="Item" parameterType="HashMap">
		select
			item_name as itemName,
			price as price
		from item_table
		where
			<foreach collection="buyArr" item="buyNum" separator="and">
			item_num = 
			(select item_num
				from cart_table
				where cart_num = #{buyNum })	
			</foreach>				
	</select>
</mapper>