<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<!-- 비밀번호 인코더 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

	<!-- 이 URL은 인터셉터 하지 않겠다 -->
	<security:http pattern="/favicon.ico" security="none" />
	<security:http pattern="/resources/**" security="none" />

	<security:http auto-config="true" use-expressions="true">
	<!-- 인터셉터, access는 권한자 -->
<!-- 	<security:intercept-url pattern="/order/**" access="hasRole('ROLE_USER')" />
    <security:intercept-url pattern="/**" access="permitAll()"/> -->
    
    <!-- 로그인 
    	login-processing-url = login.jsp form의 action 값 
    	login-page = -->
    <security:form-login
        username-parameter="userMail"
        password-parameter="userPw"
        login-processing-url="/user/auth"
        login-page="/user/login"
        default-target-url="/"/>

	<!-- 로그아웃 -->
    <security:logout 
    	logout-url="/user/logout" 
    	invalidate-session="true" 
    	logout-success-url="/"
    	delete-cookies="JSESSIONID" />
	</security:http>

	<!-- DB에 있는 값을 비교하고, 권한을 줌 -->
	<security:jdbc-user-service data-source-ref="dataSource" id="userService"
				users-by-username-query="SELECT USER_MAIL as username, USER_PW as password,ENABLED as enabled FROM USER_TABLE WHERE USER_MAIL = ?"
				authorities-by-username-query="SELECT USER_MAIL as username, AUTHORITY as authority FROM USER_TABLE u WHERE USER_MAIL = ?"/>
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="userService">
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
